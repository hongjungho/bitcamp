package bitcamp.java106.pms;

import bitcamp.java106.pms.domain.Team;
import java.util.Scanner;
// 1단계 : 명령 입력 프롬프트를 출력한다.

public class App {
    public static void main(String[] args){
        
        
        Scanner keyScan = new java.util.Scanner(System.in);
// ver 0.1 - 명령 입력 프롬프트를 출력한다.
        System.out.print("명령> ");
/*
        // 팀 정보를 받을 메모리 준비
        Team[] teams = new Team[5];
        int count = 0;

        for(int i = 0; i < teams.length; i++) {

            count++;
            teams[i] = new Team();
        
                
            System.out.println("팀명? ");
            teams[i].name = keyScan.nextLine();

            System.out.println("설명? ");
            teams[i].text = keyScan.nextLine();
            
            System.out.println("최대인원? ");
            teams[i].person = keyScan.nextInt();
            
            
            keyScan.nextLine(); //숫자뒤에 줄바꿈 코드를 읽는다
                                // 일고 난뒤에 아무것도안하기 떄문에
                                //일종의 줄바꿈 코드를 제거한다
                                // nextInt 다음에 String 을 읽어버리면 찌꺼기가 남게되서 저렇게쓰임

            System.out.println("시작일?");
            teams[i].start = keyScan.nextLine();
            System.out.println("종료일?");
            teams[i].end = keyScan.nextLine();

            System.out.print ("계속하시겠습니까?(Y/n)");

            if ( count == teams.length ) {

                break;
            }
            String str = keyScan.nextLine();
            if (str.toLowerCase().equals("n")) {
                   break;
                } 
            
         }
        System.out.println("---------------------");
        for (int i = 0; i < count; i++) {
        
            System.out.printf("%s ,%d명 ,%s ~ %s\n",teams[i].name,
                              teams[i].person,teams[i].start,teams[i].end);
        
        } */
    }
}
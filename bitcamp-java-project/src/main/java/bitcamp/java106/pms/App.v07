package bitcamp.java106.pms;

import bitcamp.java106.pms.domain.Team;
import java.util.Scanner;

// ver 0.7 - team.list 명령을 구현한다
// ver 0.6 - team/add 명령을 구현한다
// ver 0.5 - help 명령을 구현한다
// ver 0.4 - quit 명령어 입력 시 반복문을 종료한다.
// ver 0.3 - 사용자로부터 입력 받는 것을 무한 반복한다.
// ver 0.2 - 사용자 입력을 받아 스캔한다.
// ver 0.1 - 명령 입력 프롬프트를 출력한다.


public class App {
    public static void main(String[] args){
        
        
        Scanner keyScan = new java.util.Scanner(System.in);
        Team[] teams = new Team[1000];
        int teamIndex = 0;
        
        while (true) {
            System.out.print("명령> ");
            String input = keyScan.nextLine().toLowerCase();


            if ( input.equals("quit")){ //소문자 대문자 구분없이 입력을받아 quit와 같은지 비교
                System.out.println("안녕히 가세요!");
                break;
            } else if (input.equals("help")) {
                System.out.println("[도움말]");
                System.out.println("팀 등록 명령 : team/add");
                System.out.println("팀 조회 명령 : team/list");
                System.out.println("팀 상세조회 명령 : team/view 팀명");
                System.out.println("회원 등록 명령 : member/add");
                System.out.println("회원 조회 명령 : member/list");
                System.out.println("회원 상세조회 명령 : member/view 아이디");
                System.out.println("종료 : quit");
                System.out.println();
                continue; // 반복문 조건비교문으로 보내버림 (true)여기로
            } else if (input.equals("team/add")) {
                System.out.println("[팀 정보 입력]");
                Team team = new Team();

                System.out.println("팀명? ");
                team.name = keyScan.nextLine();

                System.out.println("설명? ");
                team.text = keyScan.nextLine();
            
                System.out.println("최대인원? ");
                team.person = keyScan.nextInt();
            
            
                keyScan.nextLine(); 

                System.out.println("시작일?");
                team.start = keyScan.nextLine();
                System.out.println("종료일?");
                team.end = keyScan.nextLine();

                //팀정보가 담겨있는 객체의 주소를 배열에 보관한다.
                teams[teamIndex++] = team;
                

              
                continue;
            } else if (input.equals("team/list")) {
                System.out.println("[팀 목록]");
                for (int i=0; i < teamIndex; i++) {
                    System.out.printf("%s, %d, %s ~ %s\n",
                    teams[i].name,teams[i].person,teams[i].start,teams[i].end);
                    System.out.println();

                }
            }
            System.out.println();
            continue;
        }
/*
        // 팀 정보를 받을 메모리 준비
        Team[] teams = new Team[5];
        int count = 0;

        for(int i = 0; i < teams.length; i++) {

            count++;
            teams[i] = new Team();
        
                
            

            System.out.print ("계속하시겠습니까?(Y/n)");

            if ( count == teams.length ) {

                break;
            }
            String str = keyScan.nextLine();
            if (str.toLowerCase().equals("n")) {
                   break;
                } 
            
         }
        System.out.println("---------------------");
        for (int i = 0; i < count; i++) {
        
            System.out.printf("%s ,%d명 ,%s ~ %s\n",teams[i].name,
                              teams[i].person,teams[i].start,teams[i].end);
        
        } */
    }
}